{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "type": "object",
  "required": [
    "consensus",
    "payload"
  ],
  "properties": {
    "consensus": {
      "$ref": "#/definitions/Consensus"
    },
    "payload": {
      "$ref": "#/definitions/Binary"
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Consensus": {
      "type": "object",
      "required": [
        "signatures",
        "valset_id"
      ],
      "properties": {
        "signatures": {
          "description": "Signatures must be in the same order as the validator array in `valset`",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Signature"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "valset_id": {
          "$ref": "#/definitions/ValsetId"
        }
      }
    },
    "Signature": {
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8",
        "minimum": 0.0
      }
    },
    "Uint256": {
      "description": "An implementation of u256 that is using strings for JSON encoding/decoding, such that the full u256 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances out of primitive uint types or `new` to provide big endian bytes:\n\n``` # use cosmwasm_std::Uint256; let a = Uint256::from(258u128); let b = Uint256::new([ 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 1u8, 2u8, ]); assert_eq!(a, b); ```",
      "type": "string"
    },
    "ValsetId": {
      "$ref": "#/definitions/Uint256"
    }
  }
}
