{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "call"
      ],
      "properties": {
        "call": {
          "type": "object",
          "required": [
            "payload",
            "target_contract_info"
          ],
          "properties": {
            "payload": {
              "$ref": "#/definitions/Binary"
            },
            "target_contract_info": {
              "$ref": "#/definitions/TargetContractInfo"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "TargetContractInfo": {
      "description": "Metadata necessary to call a specific contract.",
      "type": "object",
      "required": [
        "chain_id",
        "compass_id",
        "contract_address",
        "smart_contract_abi"
      ],
      "properties": {
        "chain_id": {
          "description": "The chain id of the target chain, e.g. \"eth-main\".",
          "type": "string"
        },
        "compass_id": {
          "description": "ID of the target chain's compass contract, e.g. \"50\".",
          "type": "string"
        },
        "contract_address": {
          "description": "The address of the contract to run on the target chain, e.g. \"0xd58Dfd5b39fCe87dD9C434e95428DdB289934179\".",
          "type": "string"
        },
        "smart_contract_abi": {
          "description": "The json encoded ABI of the contract on the target chain.",
          "type": "string"
        }
      }
    }
  }
}
